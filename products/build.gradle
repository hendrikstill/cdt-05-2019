import jp.classmethod.aws.gradle.s3.AmazonS3FileUploadTask
import jp.classmethod.aws.gradle.s3.SyncTask;

buildscript {
	ext {
		springBootVersion = "2.1.4.RELEASE"
	}
	repositories {
		mavenCentral()
		maven { url "https://plugins.gradle.org/m2/" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("jp.classmethod.aws:gradle-aws-plugin:0.30")
	}
}

apply plugin: "java"
apply plugin: "org.springframework.boot"
apply plugin: "jp.classmethod.aws.s3"

group = "de.inovex.training.whiskystore"
version = "0.0.1-SNAPSHOT"
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

dependencies {
	compile(
            "org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}",
            "org.springframework.boot:spring-boot-starter-web:${springBootVersion}",
			"org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}",
            "com.h2database:h2:1.4.197",
            "org.postgresql:postgresql:42.2.5",
			"org.flywaydb:flyway-core:5.2.2",
			"com.amazonaws:aws-java-sdk-s3:1.11.282"
    )

	testCompile(
            "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
    )
}

aws {
	profileName = "javaland"
	region = "eu-central-1"
}

task uploadToS3(type: AmazonS3FileUploadTask, dependsOn: build) {
	overwrite true
	file jar.archivePath
	bucketName "javaland-whiskystore-terraform"
	key "${userPrefix}/jars/products/${jar.archiveName}"
}

task copyImagesToS3(type: SyncTask) {
	source file("src/main/resources/images") // must be directory
	bucketName "${userPrefix}-whiskystore-images"
	prefix "inbox/"
}

task buildAndDeploy(type: GradleBuild) {
	tasks = ['clean', 'uploadToS3', 'deploy']
}